% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NonparamElectionForensics.R
\name{NonparamElectionForensics}
\alias{NonparamElectionForensics}
\title{Nonparametric Method}
\usage{
NonparamElectionForensics(data, Candidates, CandidatesText,
                               MainCandidate, TotalReg, TotalVotes,
                               Level, MaxThreshold,
                               FigureName, setcolors,
                               precinctLevel, computeSD, sims,
                               mode_search = list(npeaks, sortstr,
                                             minpeakdistance, pick_by),
                               man_turnout,
                               grid_type)
}
\arguments{
\item{data}{A data.frame containing precinct-level election results}

\item{Candidates}{Character vector of candidate variable names in the dataset}

\item{CandidatesText}{Character vector of text labels for candidates (optional)}

\item{MainCandidate}{Character name of the main candidate (incumbent) to analyze}

\item{TotalReg}{Character name of the variable for total registered voters}

\item{TotalVotes}{Character name of the variable for total valid votes (optional)}

\item{Level}{Character analysis level ("National" or regional variable name)}

\item{MaxThreshold}{Numeric maximum turnout threshold for analysis (default: 0.8)}

\item{FigureName}{Character name for output figures}

\item{setcolors}{Character vector of custom colors for candidates (optional)}

\item{precinctLevel}{Logical indicating whether to compute precinct-level fraud estimates (default: TRUE)}

\item{computeSD}{Character method for uncertainty estimation ("parametric", "nonparametric", or NULL)}

\item{sims}{Integer number of bootstrap simulations (default: 10)}

\item{mode_search}{List of parameters for peak detection algorithm (default: list(npeaks = 5, sortstr = TRUE, minpeakdistance = 1, pick_by = "height"))}

\item{man_turnout}{Numeric manual turnout value to override automatic detection (optional)}

\item{grid_type}{Character analysis grid type ("1D" for turnout only or "2D" for turnout-support) (default: "1D")}
}
\value{
A list containing:
\itemize{
  \item list_graphs - Collection of generated plots
  \item base_stats - Basic fraud statistics for the whole dataset
  \item sim_all_stats - Simulation statistics for the whole dataset (if computeSD specified)
  \item sim_hetero_stats_base - Base statistics for regional analyses
  \item sim_hetero_stats_sims - Simulation statistics for regional analyses
  \item fraud_precinct_data - Precinct-level fraud estimates with uncertainty
  \item data - Original input data with computed variables
  \item Level - Analysis level used
  \item creationdate - Timestamp of creation
}

list containing results of analysis
\itemize{
  \item list_graphs - list of graphs
  \item stats_summary -  table with results for analysis of the whole dataset (for Level!=NULL: data are also
                         summed across the units, aggregation error is computed)
  \item Level -  external parameter
  \item creationdate - date/time of analysis
  list_graphs = list_graphs, stats_summary = stats_table, stats_level=stats_level
}
}
\description{
This function implements the revised version of Shpilkin's method (NB! It doesn't replicate original method fully).
}
\examples{
library(EFToolkit)

dat<-read.csv(system.file("extdata/ruspres2000.csv", package="EFToolkit"))

# Estimate fraud using the whole dataset with 1D grid analysis
res1 <- NonparamElectionForensics(
       dat, Candidates = paste("P", 1:12, sep=""),
       CandidatesText=c("Stanislav Govorukhin", "Umar Dzhabrailov",
       "Vladimir Zhirinovsky", "Gennady Zuganov",
       "Ella Pamfilova", "Alexei Podberezkin",
       "Vladimir Putin", "Yuri Skuratov",
       "Konstantin Titov", "Aman Tuleev",
       "Grigorii Yavlinsky", "Against All"),
       MainCandidate = "P7",
       TotalReg = "NVoters",
       TotalVotes = "NValid",
       Level = "National",
       MaxThreshold = 0.8,
       mode_search = list(npeaks = 5, sortstr = TRUE,
               minpeakdistance = 1, pick_by = "height"),
       FigureName = "Russian Presidential Elections, 2000",
       setcolors = c("royalblue2", "springgreen1","blue",
                     "red", "green","brown2",
                     "darkgreen", "yellow", "lawngreen",
                     "purple","chartreuse1", "orange"),
       precinctLevel = TRUE, computeSD="nonparametric",
       sims=2, grid_type = "1D")

# Sum precinct-level fraud estimates
sum(res1$fraud_precinct_data$base.fraud.votes, na.rm=TRUE)
# 2685246

# Sum precinct-level fraud (only statistically significant values)
sum(res1$fraud_precinct_data$sim.precinct_mean[res1$fraud_precinct_data$sim.sig_all==TRUE], na.rm=TRUE)
# 811500.5

# Estimate fraud using region-level analysis with 1D grid
res2 <- NonparamElectionForensics(
       dat, Candidates = paste("P", 1:12, sep=""),
       CandidatesText=c("Stanislav Govorukhin", "Umar Dzhabrailov",
       "Vladimir Zhirinovsky", "Gennady Zuganov",
       "Ella Pamfilova", "Alexei Podberezkin",
       "Vladimir Putin", "Yuri Skuratov",
       "Konstantin Titov", "Aman Tuleev",
       "Grigorii Yavlinsky", "Against All"),
       MainCandidate = "P7",
       TotalReg = "NVoters",
       TotalVotes = "NValid",
       Level = "regname",
       MaxThreshold = 0.8,
       mode_search = list(npeaks = 5, sortstr = TRUE,
               minpeakdistance = 1, pick_by = "height"),
       FigureName = "Russian Presidential Elections, 2000",
       setcolors = c("royalblue2", "springgreen1","blue",
                     "red", "green","brown2",
                     "darkgreen", "yellow", "lawngreen",
                     "purple","chartreuse1", "orange"),
       precinctLevel = TRUE, computeSD="nonparametric",
       sims=2, grid_type = "1D")

# Sum precinct-level fraud estimates
sum(res2$fraud_precinct_data$precinct_mean_hetero, na.rm=TRUE)
# 1693742

# Sum precinct-level fraud (only statistically significant values)
sum(res2$fraud_precinct_data$precinct_mean_hetero[res2$fraud_precinct_data$sim.sig_all==TRUE], na.rm=TRUE)
# 1125151

# Estimate fraud using the whole dataset with 2D grid analysis
res3 <- NonparamElectionForensics(
       dat, Candidates = paste("P", 1:12, sep=""),
       CandidatesText=c("Stanislav Govorukhin", "Umar Dzhabrailov",
       "Vladimir Zhirinovsky", "Gennady Zuganov",
       "Ella Pamfilova", "Alexei Podberezkin",
       "Vladimir Putin", "Yuri Skuratov",
       "Konstantin Titov", "Aman Tuleev",
       "Grigorii Yavlinsky", "Against All"),
       MainCandidate = "P7",
       TotalReg = "NVoters",
       TotalVotes = "NValid",
       Level = "regname",
       MaxThreshold = 0.8,
       mode_search = list(npeaks = 5, sortstr = TRUE,
               minpeakdistance = 1, pick_by = "height"),
       FigureName = "Russian Presidential Elections, 2000",
       setcolors = c("royalblue2", "springgreen1","blue",
                     "red", "green","brown2",
                     "darkgreen", "yellow", "lawngreen",
                     "purple","chartreuse1", "orange"),
       precinctLevel = TRUE, computeSD="parametric",
       sims=2, grid_type = "2D")

# Sum precinct-level fraud estimates
sum(res3$fraud_precinct_data$sim.precinct_mean, na.rm=TRUE)
# -15724742

# Sum precinct-level fraud (only statistically significant values)
sum(
res3$fraud_precinct_data$sim.precinct_mean[
res3$fraud_precinct_data$sim.sig_all == TRUE
],
na.rm = TRUE)
# 0

print(round(res3$sim_hetero_stats_base, 3))

# Estimate fraud using region-level analysis with 2D grid
#NB! Takes long time to compute
\dontrun{
res4 <- NonparamElectionForensics(
       dat, Candidates = paste("P", 1:12, sep=""),
       CandidatesText=c("Stanislav Govorukhin", "Umar Dzhabrailov",
       "Vladimir Zhirinovsky", "Gennady Zuganov",
       "Ella Pamfilova", "Alexei Podberezkin",
       "Vladimir Putin", "Yuri Skuratov",
       "Konstantin Titov", "Aman Tuleev",
       "Grigorii Yavlinsky", "Against All"),
       MainCandidate = "P7",
       TotalReg = "NVoters",
       TotalVotes = "NValid",
       Level = "regname",
       MaxThreshold = 0.8,
       mode_search = list(npeaks = 5, sortstr = TRUE,
               minpeakdistance = 1, pick_by = "height"),
       FigureName = "Russian Presidential Elections, 2000",
       setcolors = c("royalblue2", "springgreen1","blue",
                     "red", "green","brown2",
                     "darkgreen", "yellow", "lawngreen",
                     "purple","chartreuse1", "orange"),
       precinctLevel = TRUE, computeSD="parametric",
       sims=2, grid_type = "2D")

# Sum precinct-level fraud estimates
sum(res4$fraud_precinct_data$precinct_mean_hetero, na.rm=TRUE)
# -8503879

# Sum precinct-level fraud (only statistically significant values)
sum(
 res4$sim_hetero_stats_sims[
 res4$fraud_precinct_data$precinct_sd_hetero_sig==TRUE
 ], na.rm=TRUE)
# 0
}
}
